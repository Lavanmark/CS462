ruleset wovyn_base {
  meta {
    // use module cs462_keys
    // use module twilio_lab alias twilio
    //   with account_sid = keys:twilio{"account_sid"}
    //   auth_token = keys:twilio{"auth_token"}
    
    shares __testing
  }
  global {
    alert_phone_number = "+19199739210"
    temperature_threshold = 60.0
    __testing = { "queries": [ { "name": "__testing" } ],
                  "events": [ { "domain": "post", "type": "test",
                              "attrs": [ "temp", "baro" ] } ] }
  }
  
  rule process_heartbeat {
    select when wovyn heartbeat where event:attr("genericThing")
    pre {
      details = event:attrs().klog("attrs")
      temperature = event:attr("genericThing"){"data"}{"temperature"}.klog("temp details")
      timestamp = event:attr("time").klog("timestamp details")
    }
      send_directive("heartbeat", {"details":details})
      always{
        raise wovyn event "new_temperature_reading"
          attributes { "temperature": temperature[0], "timestamp": timestamp }
      }
  }
  
  rule find_high_temps {
    select when wovyn new_temperature_reading
    pre{
      details = event:attrs().klog("temp attr ")
      tempF = event:attr("temperature"){"temperatureF"}.klog("Temp F = ")
    }
    if tempF > temperature_threshold then
      send_directive("find_high_temps", {"threshold_violation": "YES"})
    fired{
      raise wovyn event "threshold_violation"
        attributes {"temperature":tempF}
    }
  }
  
  rule threshold_notification {
    select when wovyn threshold_violation
    send_directive("threshold_notification", {"message":"We will notify of violation"})
  }
  
}
