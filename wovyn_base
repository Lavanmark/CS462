ruleset wovyn_base {
  meta {
    use module cs462_keys
    use module twilio_lab alias twilio
       with account_sid = keys:twilio{"account_sid"}
       auth_token = keys:twilio{"auth_token"}
  }
  global {
    alert_phone_number = "+19199739210"
    temperature_threshold = 60.0 //this is in fahrenheit
  }
  
  rule process_heartbeat {
    select when wovyn heartbeat where event:attr("genericThing")
    pre {
      details = event:attrs().klog("attrs")
      temperature = event:attr("genericThing"){"data"}{"temperature"}.klog("temp details")
      timestamp = event:attr("time").klog("timestamp details")
    }
    noop()
    always{
      raise wovyn event "new_temperature_reading"
        attributes { "temperature": temperature[0], "timestamp": timestamp }
    }
  }
  
  rule find_high_temps {
    select when wovyn new_temperature_reading
    pre{
      details = event:attrs().klog("temp attr ")
      tempF = event:attr("temperature"){"temperatureF"}.klog("Temp F = ")
    }
    send_directive("find_high_temps", {"threshold_violation": ((tempF > temperature_threshold) => "YES" | "NO")})
    always{
      raise wovyn event "threshold_violation"
        attributes event:attrs
          if (tempF > temperature_threshold)
    }
  }
  
  rule threshold_notification {
    select when wovyn threshold_violation
    pre{
      tempF = event:attr("temperature"){"temperatureF"}
    }
    every{
      twilio:def_sender(
            to = alert_phone_number,
            body = ("The temperature (" + tempF + ") was in violation of your threshold of: "+temperature_threshold+". <3 KRL")
                      ) setting (response);
      send_directive("response", {"response": response})
    }
  }
  
}
